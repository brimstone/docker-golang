ARG IMAGE_NAME
FROM ${IMAGE_NAME}:temp

RUN GOLANG_VERSION=1.12.2 \
 && DIGEST='f28c1fde8f293cc5c83ae8de76373cf76ae9306909564f54e0edcf140ce8fe3f' \
 && wget -O go.tgz "https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz" \
 && echo "${DIGEST} *go.tgz" | sha256sum -c - \
 &&	tar -C /usr/local -xzf go.tgz \
 && rm go.tgz \
 && export PATH="/usr/local/go/bin:$PATH" \
 && go version


ONBUILD ARG GOARCH
ONBUILD ENV GOARCH=$GOARCH
ONBUILD ARG REPOSITORY
ONBUILD WORKDIR /go/src/${REPOSITORY}/
ONBUILD ARG CGO_ENABLED
ONBUILD ENV CGO_ENABLED=${CGO_ENABLED} \
            GO111MODULE=on
ONBUILD COPY go.mod .
ONBUILD COPY go.sum .
ONBUILD RUN go mod download
ONBUILD RUN go list -f '{{if (and ( not .Main) (not .Indirect))}}{{.Path}}@{{.Version}}{{end}}' -m all | xargs -tn 1 go get -v || true
ONBUILD COPY . .
ONBUILD ARG PACKAGE
ONBUILD ENV PACKAGE=${PACKAGE}
ONBUILD RUN /loader -o /app "${PACKAGE:-}"
