ARG IMAGE_NAME
FROM ${IMAGE_NAME}:temp as image

RUN GOLANG_VERSION=1.18.2 \
 && DIGEST='e54bec97a1a5d230fc2f9ad0880fcbabb5888f30ed9666eca4a91c5a32e86cbc' \
 && wget -O go.tgz "https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz" \
 && echo "${DIGEST} *go.tgz" | sha256sum -c - \
 &&	tar -C /usr/local -xzf go.tgz \
 && rm go.tgz \
 && echo PATH: $PATH \
 && go version

# Install some extra tools
RUN mkdir /tmp/tools \
 && : "Install goreleaser" \
 && cd /tmp/tools \
 && git clone https://github.com/goreleaser/goreleaser \
 && cd goreleaser \
 && go build -o /go/bin/goreleaser -v \
 && : "Install golangci-lint" \
 && cd /tmp/tools \
 && git clone https://github.com/golangci/golangci-lint -b v1.46.2 \
 && cd golangci-lint \
 && go build -o /go/bin/golangci-lint -v ./cmd/golangci-lint \
 && : "Clean up the layer" \
 && cd / \
 && rm -rf /tmp/tools \
 && rm -rf /tmp/.cache \
 && rm -rf /go/pkg

FROM image as onbuild

ONBUILD ARG GOARCH
ONBUILD ENV GOARCH=$GOARCH
ONBUILD ARG REPOSITORY
ONBUILD WORKDIR /go/src/${REPOSITORY}/
ONBUILD ARG CGO_ENABLED
ONBUILD ENV CGO_ENABLED=${CGO_ENABLED} \
            GO111MODULE=on
ONBUILD COPY go.mod .
ONBUILD COPY go.sum .
ONBUILD RUN go mod download
ONBUILD RUN go list -f '{{if (and ( not .Main) (not .Indirect))}}{{.Path}}@{{.Version}}{{end}}' -m all | xargs -tn 1 go get -v || true
ONBUILD COPY . .
ONBUILD ARG PACKAGE
ONBUILD ENV PACKAGE=${PACKAGE}
ONBUILD RUN /loader go build -v -o /app "${PACKAGE:-}"
